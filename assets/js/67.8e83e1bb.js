(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{583:function(t,s,e){"use strict";e.r(s);var a=e(2),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"hooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" hooks")]),t._v(" "),e("h2",{attrs:{id:"一、常用-hooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、常用-hooks"}},[t._v("#")]),t._v(" 一、常用 hooks")]),t._v(" "),e("ol",[e("li",[t._v("hooks 只能在 function component 中使用")]),t._v(" "),e("li",[t._v("renderWithHooks 方法才会注入 hooks 上下文")]),t._v(" "),e("li",[t._v("useState 定义 state")]),t._v(" "),e("li",[t._v("useEffect 模拟生命周期--\x3e didMount didUpdate willUnmount")]),t._v(" "),e("li",[t._v("useCallback 把函数缓存一下")]),t._v(" "),e("li",[t._v("useMemo 把值缓存一下")]),t._v(" "),e("li",[t._v("useContext+useReducer 在 function component 中使用 context")])]),t._v(" "),e("h4",{attrs:{id:"hooks-解决了什么问题-❓"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hooks-解决了什么问题-❓"}},[t._v("#")]),t._v(" hooks 解决了什么问题 ❓")]),t._v(" "),e("ul",[e("li",[t._v("符合 solid 原则\n"),e("ul",[e("li",[t._v("单一职责原则（SRP）")]),t._v(" "),e("li",[t._v("开放封闭原则（OCP）")]),t._v(" "),e("li",[t._v("里氏替换原则（LSP）")]),t._v(" "),e("li",[t._v("接口隔离原则（ISP）")]),t._v(" "),e("li",[t._v("依赖倒置原则（DIP）")])])]),t._v(" "),e("li",[t._v("代码简单化")]),t._v(" "),e("li",[t._v("丰富了 function component 功能")])]),t._v(" "),e("h2",{attrs:{id:"usestate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usestate"}},[t._v("#")]),t._v(" useState")]),t._v(" "),e("p",[t._v("分为 3 个阶段：")]),t._v(" "),e("ol",[e("li",[t._v("mountState ==> 初始化\n"),e("ol",[e("li",[t._v("执行 mountState()")]),t._v(" "),e("li",[t._v("默认值是 function，执行 function，得到初始 state")]),t._v(" "),e("li",[t._v("state 存放在 memoizedState 属性中")]),t._v(" "),e("li",[t._v("新建一个 quene")]),t._v(" "),e("li",[t._v("把 Quene 传给 dispatch")]),t._v(" "),e("li",[t._v("返回默认值和 dispatch")])])]),t._v(" "),e("li",[t._v("dispatchAction ==> setState\n1.")]),t._v(" "),e("li",[t._v("updateState ==> 更新")])]),t._v(" "),e("h2",{attrs:{id:"useeffect-uselayouteffect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useeffect-uselayouteffect"}},[t._v("#")]),t._v(" useEffect/useLayoutEffect")]),t._v(" "),e("ul",[e("li",[t._v("useEffect 是异步的")]),t._v(" "),e("li",[t._v("useLayoutEffect，在 DOM 操作后是同步的会堵塞线程")])]),t._v(" "),e("h2",{attrs:{id:"usecallback-和-usememo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usecallback-和-usememo"}},[t._v("#")]),t._v(" useCallback 和 useMemo")]),t._v(" "),e("h3",{attrs:{id:"usecallback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usecallback"}},[t._v("#")]),t._v(" useCallback")]),t._v(" "),e("p",[t._v("当你把回调函数传递给经过优化的并使用引用相等性去避免非必要渲染（例如 shouldComponentUpdate）的子组件时，它将非常有用。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useCallback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n相当于"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useMemo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" fn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h3",{attrs:{id:"usememo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usememo"}},[t._v("#")]),t._v(" useMemo")]),t._v(" "),e("p",[t._v("传入 useMemo 的函数会在 渲染期间 执行")]),t._v(" "),e("p",[t._v("主要区别是：")]),t._v(" "),e("ul",[e("li",[t._v("useMemo 将调用 fn 函数并返回其结果")]),t._v(" "),e("li",[t._v("useCallback 将返回 fn 函数而不调用它。")])]),t._v(" "),e("hr"),t._v(" "),e("ul",[e("li",[t._v("React.memo： 对组件做一层 props 的浅比较，类似 shouldComponentUpdate 的逻辑")]),t._v(" "),e("li",[t._v("useCallback： 缓存函数")]),t._v(" "),e("li",[t._v("useMemo： 是 hooks 里对值的缓存，依赖变化的时候才会更新")])]),t._v(" "),e("p",[t._v("immer.js")])])}),[],!1,null,null,null);s.default=n.exports}}]);