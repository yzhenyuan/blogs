(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{557:function(_,v,s){"use strict";s.r(v);var t=s(2),a=Object(t.a)({},(function(){var _=this,v=_.$createElement,s=_._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"跨站脚本攻击-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨站脚本攻击-xss"}},[_._v("#")]),_._v(" 跨站脚本攻击 XSS")]),_._v(" "),s("p",[_._v("XSS 是跨站脚本攻击（Cross Site Scripting）的简写，但是从首写字母命名的方式来看，应该取名 CSS，但这样就和层叠样式表CSS重名了，所以取名为 XSS。")]),_._v(" "),s("p",[_._v("XSS 攻击，一般是指"),s("strong",[_._v("攻击者通过在网页中注入恶意脚本")]),_._v("，当用户浏览网页时，恶意脚本执行，控制用户浏览器行为的一种攻击方式。")]),_._v(" "),s("p",[_._v("XSS 的本质是：恶意代码未经过滤，与网站正常的代码混在一起；浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行。")]),_._v(" "),s("h2",{attrs:{id:"一、-xss-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、-xss-分类"}},[_._v("#")]),_._v(" 一、 XSS 分类")]),_._v(" "),s("p",[_._v("XSS 攻击按是否把攻击数据存进服务器端，攻击行为是否伴随着攻击数据一直存在，可分为 "),s("strong",[_._v("非持久型 XSS 攻击")]),_._v(" 和 "),s("strong",[_._v("持久型 XSS 攻击")]),_._v("。")]),_._v(" "),s("p",[_._v("XSS 攻击按攻击方式又可分为：")]),_._v(" "),s("ol",[s("li",[_._v("反射型 XSS（非持久型 XSS 攻击）")]),_._v(" "),s("li",[_._v("DOM 型 XSS（非持久型 XSS 攻击）")]),_._v(" "),s("li",[_._v("存储型 XSS（持久型 XSS 攻击）")])]),_._v(" "),s("h3",{attrs:{id:"_1-1-反射型-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-反射型-xss"}},[_._v("#")]),_._v(" 1.1 反射型 XSS")]),_._v(" "),s("p",[_._v('反射型XSS，简单的把用户输入的数据"反射"给浏览器，')]),_._v(" "),s("p",[_._v('即黑客往往需要诱使用户"点击"一个恶意链接攻击才能成功，用户通过点击这个恶意链接，攻击者可以成功获取用户隐私数据的一种方式。如："盗取用户Cookie信息"、"破坏页面结构"、"重定向到其他网站"，盗取内网IP等。')]),_._v(" "),s("p",[_._v("那么既然反射型XSS也可以是HTML注入，那么它注入的关键自然也就从前端的HTML页面开始下手：")]),_._v(" "),s("ol",[s("li",[_._v("用户能够与浏览器页面产生交互动作（输入搜索的关键词，点击按钮，点击链接等等），但这些都需要去诱使用户去操作，说起来容易，做起来难。")]),_._v(" "),s("li",[_._v('用户输入的数据会被攻击方拼接出合适的html去执行恶意的js脚本，这样的过程就像是"一次反射"')])]),_._v(" "),s("p",[_._v("反射型 XSS 的数据流向是："),s("code",[_._v("浏览器 -> 后端 -> 浏览器")])]),_._v(" "),s("h3",{attrs:{id:"_1-2-存储型-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-存储型-xss"}},[_._v("#")]),_._v(" 1.2 存储型 XSS")]),_._v(" "),s("p",[_._v("存储型XSS,顾名思义就是将恶意代码存储到数据库中，只要访问页面，恶意代码即可执")]),_._v(" "),s("p",[_._v("例如：访问某黑客写下的一篇含有恶意JavaScript代码的博客文章，黑客把恶意脚本保存到服务端。")]),_._v(" "),s("p",[_._v("存储行 XSS 的数据流向是： "),s("code",[_._v("浏览器 -> 后端 -> 数据库 -> 后端 -> 浏览器")])]),_._v(" "),s("h3",{attrs:{id:"_1-3-dom型-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-dom型-xss"}},[_._v("#")]),_._v(" 1.3 DOM型 XSS")]),_._v(" "),s("p",[_._v('从效果上来说，也是"反射型XSS"，单独划分出来，是因为其形成是通过修改页面的'),s("code",[_._v("DOM节点")]),_._v("形成的XSS。")]),_._v(" "),s("p",[_._v("例如：通过修改DOM节点上的绑定方法，用户无意间通过点击、输入等行为执行这些方法获取到用户的相关信息")]),_._v(" "),s("p",[_._v("可以触发DOM XSS的属性有：")]),_._v(" "),s("ul",[s("li",[_._v("document.referer属性")]),_._v(" "),s("li",[_._v("window.name属性")]),_._v(" "),s("li",[_._v("location属性")]),_._v(" "),s("li",[_._v("innerHTML属性")]),_._v(" "),s("li",[_._v("documen.write属性等\nDOM XSS并没有经过服务端和数据库，只在浏览器前端，通过DOM的操作执行恶意脚本。因此DOM XSS的数据流如下："),s("code",[_._v("URL -> 浏览器")])])]),_._v(" "),s("h2",{attrs:{id:"二、如何去检测是否存在xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、如何去检测是否存在xss"}},[_._v("#")]),_._v(" 二、如何去检测是否存在XSS")]),_._v(" "),s("p",[_._v("一般方法是，用户可以在有关键字输入搜索的地方输入****后点击搜索，若弹框出现展示123，说明存在XSS漏洞，这就说明前端并没有对用户输入的内容过滤处理。")]),_._v(" "),s("h2",{attrs:{id:"三、-xss的攻击方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、-xss的攻击方式"}},[_._v("#")]),_._v(" 三、 XSS的攻击方式")]),_._v(" "),s("h3",{attrs:{id:"_3-1-cookie劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-cookie劫持"}},[_._v("#")]),_._v(" 3.1 Cookie劫持")]),_._v(" "),s("p",[_._v("通过伪装一些"),s("code",[_._v("图片和按钮")]),_._v("等，诱使用户对其操作，使网页执行了攻击者的恶意脚本，使攻击者能够获取当前用户的Cookie信息")]),_._v(" "),s("h3",{attrs:{id:"_3-2-构造get和post请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-构造get和post请求"}},[_._v("#")]),_._v(" 3.2 构造GET和POST请求")]),_._v(" "),s("p",[_._v("若某攻击者想删除某网站的一篇文章，首先获得当前文章的id，然后通过使用脚本"),s("code",[_._v("插入图片")]),_._v("发送一个"),s("code",[_._v("GET请求")]),_._v("，或"),s("code",[_._v("构造表单")]),_._v("，"),s("code",[_._v("XMLHTTPRequest")]),_._v("发送"),s("code",[_._v("POST请求")]),_._v("以达到删除该文章的目的")]),_._v(" "),s("h3",{attrs:{id:"_3-3-xss钓鱼"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-xss钓鱼"}},[_._v("#")]),_._v(" 3.3 XSS钓鱼")]),_._v(" "),s("p",[s("code",[_._v("钓鱼")]),_._v("这个词一般认识是起源于"),s("code",[_._v("社会工程学")]),_._v("，黑客使用这个这门学科的理念思想，在未授权不知情的情况下诱骗用户，并得到对方对方的姓名、年龄、邮箱账号、甚至是银行卡密码等私人信息。")]),_._v(" "),s("p",[_._v('比如："某用户在某网站（已被攻击）上操作黑客伪造的一个登录框，当用户在登录框中输入了用户名（这里可能是身份证号等）和密码之后，将其信息上传至黑客的服务器上（该用户的信息就已经从该网站泄漏）"')]),_._v(" "),s("h3",{attrs:{id:"_3-4-获取用户真实的ip地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-获取用户真实的ip地址"}},[_._v("#")]),_._v(" 3.4 获取用户真实的IP地址")]),_._v(" "),s("p",[_._v("通过第三方软件获取，比如客户端安装了Java环境（JRE），则可通过调用"),s("code",[_._v("Java Applet")]),_._v("的接口获取客户端本地的IP地址")]),_._v(" "),s("h2",{attrs:{id:"四、-防御方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、-防御方法"}},[_._v("#")]),_._v(" 四、 防御方法")]),_._v(" "),s("p",[_._v("XSS 攻击有两大要素：")]),_._v(" "),s("ol",[s("li",[_._v("攻击者提交恶意代码。")]),_._v(" "),s("li",[_._v("浏览器执行恶意代码。")])]),_._v(" "),s("p",[_._v("XSS产生的原因呢？是由于输入数据的不可控，未对数据进行过滤。 那么我们防御XSS要从以下几个方面着手")]),_._v(" "),s("ul",[s("li",[_._v("输入校验：长度限制、值类型是否正确、是否包含特殊字符（<>”等）、是否包含alert、onclick、script等关键字。")]),_._v(" "),s("li",[_._v("输出编码：根据输出的位置进行相应的编码，如HTML编码、JavaScript编码、URL编码。原则是该数据不要超出自己所在的区域，也不要被当做指令执行。")]),_._v(" "),s("li",[_._v("考虑set-cookie中设置http-only,避免cookie盗用。")])])])}),[],!1,null,null,null);v.default=a.exports}}]);