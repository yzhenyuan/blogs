(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{557:function(e,a,t){"use strict";t.r(a);var v=t(2),_=Object(v.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"http-缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存"}},[e._v("#")]),e._v(" HTTP 缓存")]),e._v(" "),t("p",[e._v("http 缓存指的是: 当客户端向服务器请求资源时，会先抵达浏览器缓存，如果浏览器有“要请求资源”的副本，就可以直接从浏览器缓存中提取而不是从原始服务器中提取这个资源。")]),e._v(" "),t("h2",{attrs:{id:"一、强缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、强缓存"}},[e._v("#")]),e._v(" 一、强缓存")]),e._v(" "),t("p",[e._v("当浏览器去请求某个文件的时候，服务端就在 "),t("code",[e._v("response header")]),e._v(" 里面对该文件做了缓存配置。")]),e._v(" "),t("p",[e._v("缓存的时间、缓存类型都由"),t("strong",[e._v("服务端控制")]),e._v("\n具体表现为："),t("code",[e._v("response header")]),e._v(" 的 cache-control，")]),e._v(" "),t("p",[e._v("常见的设置是：max-age public private no-cache no-store")]),e._v(" "),t("h3",{attrs:{id:"强缓存两种策略-expires-和-cache-control"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存两种策略-expires-和-cache-control"}},[e._v("#")]),e._v(" 强缓存两种策略 expires 和 cache-control")]),e._v(" "),t("h4",{attrs:{id:"cache-control-常见设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-常见设置"}},[e._v("#")]),e._v(" cache-control 常见设置")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("public")]),e._v(" 客户端和代理服务器都可以缓存该资源；")]),e._v(" "),t("li",[t("code",[e._v("private")]),e._v(" 只让客户端可以缓存该资源；代理服务器不缓存")]),e._v(" "),t("li",[t("code",[e._v("max-age")]),e._v(" 客户端在 xxx 秒的有效期内，如果有请求该资源的需求的话就直接读取缓存\n"),t("ul",[t("li",[e._v("cache-control: max-age=xxxx，immutable")])])]),e._v(" "),t("li",[t("code",[e._v("no-cache")]),e._v(" 设置了 no-cache 就"),t("strong",[e._v("不会走强缓存")]),e._v("了，每次请求都回询问服务端。")]),e._v(" "),t("li",[t("code",[e._v("no-store")]),e._v(" "),t("strong",[e._v("不缓存")]),e._v("，这个会让客户端、服务器都不缓存，也就没有所谓的强缓存、协商缓存了。")])]),e._v(" "),t("h4",{attrs:{id:"expires"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[e._v("#")]),e._v(" Expires")]),e._v(" "),t("p",[e._v("Expires 的一个缺点就是，返回的到期时间是服务器端的时间这样存在一个问题，如果客户端的时间与服务器的时间相差很大，那么误差就很大，所以在 HTTP 1.1 版开始，使用 Cache-Control: max-age=秒替代。")]),e._v(" "),t("h2",{attrs:{id:"二、对比缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、对比缓存"}},[e._v("#")]),e._v(" 二、对比缓存")]),e._v(" "),t("p",[e._v("通过比较去看是否需要缓存，会去和服务器进行一次通信，把本地缓存的状态发给服务器，让服务器去比较要不要重新拉取资源")]),e._v(" "),t("h3",{attrs:{id:"etag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#etag"}},[e._v("#")]),e._v(" ETag")]),e._v(" "),t("p",[t("code",[e._v("Etag")]),e._v("/"),t("code",[e._v("if-none-match")]),e._v("，前者是响应头，后者是请求头")]),e._v(" "),t("p",[e._v("服务器要判断请求内容计算得到的 etag 是否与请求头 If-None-Match 是否一致，如果一致就表示没有更新，返回 304 就可，否则按正常请求处理")]),e._v(" "),t("ul",[t("li",[e._v("服务器给这个资源生成一个"),t("strong",[e._v("唯一标识")]),e._v("，放在 http-eTag 头里面")]),e._v(" "),t("li",[e._v("资源过期的时候，浏览器把 eTag 拿出来，向服务器发送一个请求，让服务器去确认 eTag 是否过期")]),e._v(" "),t("li",[e._v("如果过期就会把资源重新发送到浏览器，返回一个 200")]),e._v(" "),t("li",[e._v("如果没有过期，服务器就不会重新推送资源，返回一个 304 跳转（304 是本地跳转，从磁盘缓存上去拿 ）")])]),e._v(" "),t("h3",{attrs:{id:"last-modified"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#last-modified"}},[e._v("#")]),e._v(" Last-modified")]),e._v(" "),t("p",[t("code",[e._v("last-modified")]),e._v("/"),t("code",[e._v("if-modified-since")]),e._v("；前者是响应头，后者是请求头")]),e._v(" "),t("ul",[t("li",[e._v("服务器给这个资源生成一个时间戳，标示着资源的最后修改时间（实际上服务上面所有的资源都是有时间戳），客户端在请求数据的时候，先去本地缓存里面检查是否过期")]),e._v(" "),t("li",[e._v("如果资源过期，他会把时间戳放到请求头（cache-control）去发送请求，服务器收到请求后发现头有 if-modified-since,就会去和被请求资源的最后修改时间做对比，如果最后修改时间比较新就反回 200，否则 304")])]),e._v(" "),t("h2",{attrs:{id:"三、-缓存的优先级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、-缓存的优先级"}},[e._v("#")]),e._v(" 三、 缓存的优先级")]),e._v(" "),t("ol",[t("li",[e._v("last-modified/if-modified-since")]),e._v(" "),t("li",[e._v("eTag/if-none-match // "),t("strong",[e._v("对文件做精准的 md5,能响应文件非常细致的")])]),e._v(" "),t("li",[e._v("expires // "),t("strong",[e._v("不能响应毫秒级别")])]),e._v(" "),t("li",[e._v("cache-control // 过期时间长度")])]),e._v(" "),t("h3",{attrs:{id:"强缓存和对比缓存的使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存和对比缓存的使用场景"}},[e._v("#")]),e._v(" 强缓存和对比缓存的使用场景")]),e._v(" "),t("p",[e._v("强缓存:")]),e._v(" "),t("ul",[t("li",[e._v("由于 css 和 js 在打包时加了 md5 值，建议直接使用，")]),e._v(" "),t("li",[e._v("并且 expires 和 cache-control 同时使用，建议设置时长为 7 天较为妥当")])]),e._v(" "),t("p",[e._v("对比缓存:")]),e._v(" "),t("ul",[t("li",[e._v("图片文件由于没有加 md5 值，建议采用对比缓存，")]),e._v(" "),t("li",[e._v("html 文件也建议采用对比缓")])]),e._v(" "),t("h2",{attrs:{id:"四、-chrome-network"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、-chrome-network"}},[e._v("#")]),e._v(" 四、 Chrome Network")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("只有当前的派生资源才进行缓存，但是派生资源放到缓存中是不大对的\n只有内存中放不下了才会放到硬盘中\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("共同点：都不请求资源")]),e._v(" "),t("ul",[t("li",[e._v("memory //内存，放在内存是比较快，浏览器关掉下次就没有了")]),e._v(" "),t("li",[e._v("disk //硬盘，浏览器关掉下次还会有")])]),e._v(" "),t("p",[t("strong",[e._v("缓存的地方会跟电脑的环境有关系（电脑内存）")])])])}),[],!1,null,null,null);a.default=_.exports}}]);