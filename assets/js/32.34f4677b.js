(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{537:function(s,t,a){"use strict";a.r(t);var n=a(2),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"原型和原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型和原型链"}},[s._v("#")]),s._v(" 原型和原型链")]),s._v(" "),a("p",[s._v("想了解原型需要从 JS 这门语言的设计初衷开始来理解")]),s._v(" "),a("h2",{attrs:{id:"原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[s._v("#")]),s._v(" 原型")]),s._v(" "),a("h3",{attrs:{id:"一、从-js-设计目的开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、从-js-设计目的开始"}},[s._v("#")]),s._v(" 一、从 js 设计目的开始")]),s._v(" "),a("p",[s._v("1994 年网景公司开发出了第一个网络浏览器，但是整个页面没有任何可以好访问者交互的能力")]),s._v(" "),a("p",[s._v("🆚 例如：表单提交，没有任何验证，什么都不输入然后提交表单后，就只能靠服务端返回信息提示，太消耗网络资源")]),s._v(" "),a("p",[s._v("然后就急需一门网页脚本语言，使得浏览器可以与网页互动")]),s._v(" "),a("p",[s._v("工程师 Brendan Eich 负责开发这种新语言。他觉得，没必要设计得很复杂，这种语言只要能够完成一些简单操作就够了，比如判断用户有没有填写表单")]),s._v(" "),a("p",[s._v("🚗 总结：设计 js 的目的就是让浏览器可以与网页互动")]),s._v(" "),a("h3",{attrs:{id:"二、遇到的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、遇到的问题"}},[s._v("#")]),s._v(" 二、遇到的问题")]),s._v(" "),a("ul",[a("li",[s._v("要不要继承机制")]),s._v(" "),a("li",[s._v("如果不需要，那么如何将所有对象联系起来")]),s._v(" "),a("li",[s._v("如何共享属性和方法")])]),s._v(" "),a("h4",{attrs:{id:"_2-1-继承机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-继承机制"}},[s._v("#")]),s._v(" 2.1 继承机制")]),s._v(" "),a("p",[s._v("1994 年正是面向对象编程最兴盛的时期，Brendan Eich 无疑受到了影响，"),a("strong",[s._v("Javascript 里面所有的数据类型都是对象（object）")]),s._v("，这一点与 Java 非常相似。但是，他随即就遇到了一个难题")]),s._v(" "),a("p",[s._v("❓ 到底要不要设计"),a("strong",[s._v("继承机制")]),s._v("呢 (O_o)??")]),s._v(" "),a("ul",[a("li",[s._v('如果真的是一种简易的脚本语言，其实不需要有"继承"机制')]),s._v(" "),a("li",[s._v("但是，Javascript 里面都是对象，必须有一种机制，将所有对象联系起来")])]),s._v(" "),a("p",[s._v('但是，他不打算引入"类"（class）的概念，因为一旦有了"类"，Javascript 就是一种完整的面向对象编程语言了，违背了一开始的设计初衷')]),s._v(" "),a("p",[s._v("🚗 总结：不需要继承，但是需要一种机制将所有对象联系起来")]),s._v(" "),a("h4",{attrs:{id:"_2-2-构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-构造函数"}},[s._v("#")]),s._v(" 2.2 构造函数")]),s._v(" "),a("p",[s._v("他考虑到，C++和 Java 语言都使用 new 命令，生成实例。")]),s._v(" "),a("p",[s._v("C++的写法是：")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("　　ClassName *object = new ClassName(param);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Java 的写法是：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("　　"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Foo")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("因此，他就把 "),a("code",[s._v("new")]),s._v(" 命令引入了 Javascript，用来从原型对象生成一个实例对象。")]),s._v(" "),a("p",[s._v('但是，Javascript 没有"类"，怎么来表示原型对象呢？')]),s._v(" "),a("p",[s._v('这时，他想到 C++和 Java 使用 new 命令时，都会调用"类"的构造函数（constructor）。他就做了一个简化的设计，在 Javascript 语言中，'),a("strong",[s._v("new 命令后面跟的不是类，而是构造函数")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构造函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//🚆 示例对象 this")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对这个构造函数使用 new，就会生成一个狗对象的 实例。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" dogA "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DOG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"大毛"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("🚗 总结：使用构造函数来将所有的对象联系起来，"),a("strong",[s._v("构造函数和普通函数的区别就是，构造函数前面有"),a("code",[s._v("new")])])]),s._v(" "),a("h4",{attrs:{id:"_2-3-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-prototype"}},[s._v("#")]),s._v(" 2.3 prototype")]),s._v(" "),a("p",[s._v("每一个实例对象，都有自己的属性和方法的副本。这不仅无法做到数据共享，也是极大的资源浪费。")]),s._v(" "),a("p",[s._v("考虑到这一点，Brendan Eich 决定为构造函数设置一个"),a("code",[s._v("prototype")]),s._v("属性。")]),s._v(" "),a("p",[s._v("这个属性包含一个对象，所有实例对象需要共享的属性和方法，都放在这个对象里面；那些不需要共享的属性和方法，就放在构造函数里面。")]),s._v(" "),a("p",[s._v("实例对象一旦创建，将自动引用 prototype 对象的属性和方法。")]),s._v(" "),a("p",[s._v("🚗 总结：为构造函数设置一个"),a("code",[s._v("prototype")]),s._v("属性，将需要共享的属性和方法放到里面")]),s._v(" "),a("h4",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[s._v("#")]),s._v(" constructor")]),s._v(" "),a("p",[s._v("❓ 如何实现 继承呢？\n任何一个 prototype 对象都有一个 constructor 属性，指向它的构造函数")]),s._v(" "),a("p",[s._v("每一个实例也有一个 constructor 属性，默认调用 prototype 对象的 constructor 属性")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"动物"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Cat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ❓ 怎样才能使"Cat"继承"Animal"呢？')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n\n*/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"三、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、总结"}},[s._v("#")]),s._v(" 三、总结")]),s._v(" "),a("p",[s._v('由于所有的实例对象共享同一个 prototype 对象，那么从外界看起来，prototype 对象就好像是实例对象的原型，而实例对象则好像"继承"了 prototype 对象一样。')]),s._v(" "),a("h2",{attrs:{id:"原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[s._v("#")]),s._v(" 原型链")])])}),[],!1,null,null,null);t.default=r.exports}}]);