(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{551:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"libuv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#libuv"}},[t._v("#")]),t._v(" Libuv")]),t._v(" "),s("h2",{attrs:{id:"文件操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件操作符"}},[t._v("#")]),t._v(" 文件操作符")]),t._v(" "),s("h3",{attrs:{id:"常见的-i-o-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的-i-o-操作"}},[t._v("#")]),t._v(" 常见的 I/O 操作")]),t._v(" "),s("ul",[s("li",[t._v("TCP / UDP")]),t._v(" "),s("li",[t._v("标准输入输出")]),t._v(" "),s("li",[t._v("文件读写")]),t._v(" "),s("li",[t._v("DNS")]),t._v(" "),s("li",[t._v("管道（进程通信）")])]),t._v(" "),s("h2",{attrs:{id:"i-o-模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-o-模型"}},[t._v("#")]),t._v(" I/O 模型")]),t._v(" "),s("h2",{attrs:{id:"epoll"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#epoll"}},[t._v("#")]),t._v(" epoll")]),t._v(" "),s("p",[t._v("libuv 使用 epoll 来构建 event-loop 的主体")])])}),[],!1,null,null,null);a.default=r.exports}}]);