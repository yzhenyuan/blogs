(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{493:function(t,a,n){"use strict";n.r(a);var s=n(4),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"前端中的数据结构和算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端中的数据结构和算法"}},[t._v("#")]),t._v(" 前端中的数据结构和算法")]),t._v(" "),n("blockquote",[n("p",[t._v("数据结构是在计算机中存储数据的一种特殊方式，使得数据可以高效地被访问和修改。更确切地说，数据结构是数据值的集合，表示数据之间的关系，也包括了作用在数据上的函数或操作。")])]),t._v(" "),n("h2",{attrs:{id:"一、时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、时间复杂度"}},[t._v("#")]),t._v(" 一、时间复杂度")]),t._v(" "),n("h4",{attrs:{id:"常见的时间复杂度阶数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见的时间复杂度阶数"}},[t._v("#")]),t._v(" 常见的时间复杂度阶数")]),t._v(" "),n("ul",[n("li",[t._v("常熟阶 O(1)：即算法的计算量不随着输入规模的变化而变化。")]),t._v(" "),n("li",[t._v("线性阶 O(n)")]),t._v(" "),n("li",[t._v("多项式阶 O(n^c)：常见的多项式阶如 O(n^2)、O(n^3)")]),t._v(" "),n("li",[t._v("指数阶 O(C^n)：常见的指数阶如 O(2^n)")])]),t._v(" "),n("blockquote",[n("p",[t._v("我们认为时间复杂度为 O(n)、O(log2N)、O(n^2) 是高效的算法。对于合理大的 n，O(n^3) 也是可以接受的。")])]),t._v(" "),n("h2",{attrs:{id:"二、空间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、空间复杂度"}},[t._v("#")]),t._v(" 二、空间复杂度")]),t._v(" "),n("p",[t._v("既然时间复杂度不是用来计算程序具体耗时的，那么我也应该明白，空间复杂度也不是用来计算程序实际占用的空间的。")]),t._v(" "),n("p",[t._v("空间复杂度是对一个算法在运行过程中临时占用存储空间大小的一个量度，同样反映的是一个趋势，我们用 S(n) 来定义。")]),t._v(" "),n("p",[t._v("空间复杂度比较常用的有：O(1)、O(n)、O(n²)")])])}),[],!1,null,null,null);a.default=r.exports}}]);