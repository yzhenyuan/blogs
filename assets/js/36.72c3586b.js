(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{545:function(v,t,_){"use strict";_.r(t);var a=_(2),i=Object(a.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),_("p",[v._v("设计模式是代码设计经验的总结，为了可重用代码，保证代码的可靠性等。")]),v._v(" "),_("p",[v._v("设计模式主要分为三大类型，创建型模式，结构型模式和行为型模式，本书还额外写了另两类设计模式，技巧型模式和架构型模式。")]),v._v(" "),_("p",[v._v("JavaScript设计模式是以面向对象编程为基础的，JavaScript的面向对象编程和传统的C++、Java的面向对象编程有些差别，想继续了解JavaScript设计模式必须要先搞懂JavaScript面向对象编程")]),v._v(" "),_("ol",[_("li",[v._v("——单体模式")]),v._v(" "),_("li",[v._v("——工厂模式")]),v._v(" "),_("li",[v._v("——迭代器模式")]),v._v(" "),_("li",[v._v("——装饰者模式")]),v._v(" "),_("li",[v._v("——策略模式")]),v._v(" "),_("li",[v._v("——外观模式")]),v._v(" "),_("li",[v._v("——代理模式")]),v._v(" "),_("li",[v._v("——中介者模式")]),v._v(" "),_("li",[v._v("——观察者模式")])])])}),[],!1,null,null,null);t.default=i.exports}}]);