(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{579:function(t,e,s){"use strict";s.r(e);var a=s(2),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vite-和-vue3-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vite-和-vue3-的使用"}},[t._v("#")]),t._v(" Vite 和 Vue3 的使用")]),t._v(" "),s("h2",{attrs:{id:"vite-特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vite-特点"}},[t._v("#")]),t._v(" Vite 特点")]),t._v(" "),s("p",[t._v("一个基于浏览器原生 ES imports 的开发服务器。利用浏览器去解析 imports，在服务器端按需编译返回，完全跳过了打包这个概念。对 Vue 文件支持，还搞定了热更新，而且热更新的速度不会随着模块增多而变慢。针对生产环境则可以把同一份代码用 rollup 打包")]),t._v(" "),s("ol",[s("li",[t._v("类似于 "),s("code",[t._v("webpack-dev-server")])]),t._v(" "),s("li",[t._v("基于 "),s("code",[t._v("ES imports")])]),t._v(" "),s("li",[t._v("热更新使用 "),s("code",[t._v("WebSocket")]),t._v(" 实现服务端使用 "),s("code",[t._v("Koa")])]),t._v(" "),s("li",[t._v("按需编译，开发模式下不需要打包，只需要编译浏览器发出的 HTTP 请求对应的文件即可，所以热更新速度很快。")]),t._v(" "),s("li",[t._v("打包使用 rollup")])]),t._v(" "),s("h3",{attrs:{id:"👉-基于-es-imports"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#👉-基于-es-imports"}},[t._v("#")]),t._v(" 👉 基于 "),s("code",[t._v("ES imports")])]),t._v(" "),s("p",[t._v("开发模式下 拦截浏览器发出的 "),s("code",[t._v("ES imports")]),t._v(" 请求并做相应处理，拦截后使用 "),s("code",[t._v("es-module-lexer")]),t._v("，来进行的语法分析获取 imports 数组，然后再做的替换")]),t._v(" "),s("p",[t._v("当声明一个 script 标签类型为 module 时，浏览器将对其内部的 import 引用发起 HTTP 请求获取模块内容")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"👉-热更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#👉-热更新"}},[t._v("#")]),t._v(" 👉 热更新")]),t._v(" "),s("p",[t._v("要实现热更新，那么就需要浏览器和服务器建立某种通信机制，这样浏览器才能收到通知进行热更新。")]),t._v(" "),s("h4",{attrs:{id:"客户端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[t._v("#")]),t._v(" 客户端")]),t._v(" "),s("p",[t._v("Vite 的是通过 "),s("code",[t._v("WebSocket")]),t._v(" 来实现的热更新通信，代码在 "),s("code",[t._v("client")]),t._v(" 文件里")]),t._v(" "),s("ul",[s("li",[t._v("connected: 连接成功")]),t._v(" "),s("li",[t._v("vue-reload: 修改了 "),s("code",[t._v("script")]),t._v("，组件重新加载")]),t._v(" "),s("li",[t._v("vue-rerender: 修改了"),s("code",[t._v("template")]),t._v(" ,组件重新加载")]),t._v(" "),s("li",[t._v("style-update: 样式更新")]),t._v(" "),s("li",[t._v("style-remove: 样式移除")]),t._v(" "),s("li",[t._v("js-update: js 文件更新")]),t._v(" "),s("li",[t._v("full-reload: fallback 机制，网页重刷新")])]),t._v(" "),s("h4",{attrs:{id:"服务端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端"}},[t._v("#")]),t._v(" 服务端")]),t._v(" "),s("p",[t._v("主要接卸vue文件然后解析，可以直接 运行 vue 文件，把原本一个 .vue 的文件拆成了三个请求（分别对应 script、style 和 template） ，浏览器会先收到包含 script 逻辑的 App.vue 的响应，然后解析到 template 和 style 的路径后，会再次发起 HTTP 请求来请求对应的资源，此时 Vite 对其拦截并再次处理后返回相应的内容")]),t._v(" "),s("h2",{attrs:{id:"_5-问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-问题"}},[t._v("#")]),t._v(" ⑤ 问题")]),t._v(" "),s("ol",[s("li",[t._v("压缩使用 terser，可以选择 esbuild(之前 Chrome80 以下有点问题)")]),t._v(" "),s("li",[t._v("类型别名 键必须以斜线开始和结束")]),t._v(" "),s("li",[t._v("环境变量暂时没有注入到项目中，使用 node 写入文件里")])])])}),[],!1,null,null,null);e.default=r.exports}}]);